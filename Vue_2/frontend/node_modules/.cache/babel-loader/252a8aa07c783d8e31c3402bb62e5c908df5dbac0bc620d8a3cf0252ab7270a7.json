{"ast":null,"code":"import axios from '../axios';\nexport default {\n  data() {\n    return {\n      title: '',\n      price: '',\n      description: '',\n      tags: '',\n      image: null,\n      imagePreview: null,\n      loading: false\n    };\n  },\n  methods: {\n    handleImageChange(e) {\n      const file = e.target.files[0];\n      if (file) {\n        this.image = file;\n        // 创建预览\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.imagePreview = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    async handleSubmit() {\n      if (!this.title || !this.price || !this.description) {\n        this.$message.error('请填写必填字段');\n        return;\n      }\n      this.loading = true;\n      try {\n        // 创建FormData对象\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('price', this.price);\n        formData.append('description', this.description);\n        formData.append('tags', this.tags);\n\n        // 如果有图片，添加到FormData\n        if (this.image) {\n          formData.append('image', this.image);\n        }\n\n        // 发送请求\n        const res = await axios.post('/items', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (res.ok) {\n          this.$message.success('商品发布成功！');\n          // 重置表单\n          this.title = '';\n          this.price = '';\n          this.description = '';\n          this.tags = '';\n          this.image = null;\n          this.imagePreview = null;\n\n          // 跳转到商品详情页\n          this.$router.push({\n            name: 'ItemDetail',\n            params: {\n              id: res.data.id\n            }\n          });\n        }\n      } catch (error) {\n        console.error('发布商品失败', error);\n        this.$message.error(error.error?.message || '发布商品失败，请稍后重试');\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","title","price","description","tags","image","imagePreview","loading","methods","handleImageChange","e","file","target","files","reader","FileReader","onload","result","readAsDataURL","handleSubmit","$message","error","formData","FormData","append","res","post","headers","ok","success","$router","push","name","params","id","console","message"],"sources":["D:\\21626\\MyFiles\\files\\2025fall\\SE\\Vue_2\\frontend\\src\\views\\Publish.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8\">\n        <div class=\"card mt-5\">\n          <div class=\"card-header bg-primary text-white\">\n            <h4 class=\"mb-0\">发布商品</h4>\n          </div>\n          <div class=\"card-body\">\n            <form @submit.prevent=\"handleSubmit\" enctype=\"multipart/form-data\">\n              <div class=\"form-group\">\n                <label for=\"title\">商品标题</label>\n                <input \n                  type=\"text\" \n                  id=\"title\" \n                  v-model=\"title\" \n                  class=\"form-control\" \n                  required\n                >\n              </div>\n              \n              <div class=\"form-group\">\n                <label for=\"price\">价格（元）</label>\n                <input \n                  type=\"number\" \n                  id=\"price\" \n                  v-model=\"price\" \n                  class=\"form-control\" \n                  step=\"0.01\" \n                  min=\"0\" \n                  required\n                >\n              </div>\n              \n              <div class=\"form-group\">\n                <label for=\"description\">商品描述</label>\n                <textarea \n                  id=\"description\" \n                  v-model=\"description\" \n                  class=\"form-control\" \n                  rows=\"5\"\n                  required\n                ></textarea>\n              </div>\n              \n              <div class=\"form-group\">\n                <label for=\"tags\">标签（用空格分隔）</label>\n                <input \n                  type=\"text\" \n                  id=\"tags\" \n                  v-model=\"tags\" \n                  class=\"form-control\" \n                  placeholder=\"例如：书籍 教材 计算机\"\n                >\n              </div>\n              \n              <div class=\"form-group\">\n                <label for=\"image\">商品图片（可选）</label>\n                <input \n                  type=\"file\" \n                  id=\"image\" \n                  class=\"form-control-file\" \n                  @change=\"handleImageChange\"\n                  accept=\"image/*\"\n                >\n                <div class=\"mt-2\" v-if=\"imagePreview\">\n                  <img :src=\"imagePreview\" class=\"img-thumbnail\" style=\"max-height: 200px;\">\n                </div>\n              </div>\n              \n              <button \n                type=\"submit\" \n                class=\"btn btn-primary btn-block\" \n                :disabled=\"loading\"\n              >\n                <span v-if=\"loading\" class=\"spinner-border spinner-border-sm mr-2\"></span>\n                发布商品\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios';\n\nexport default {\n  data() {\n    return {\n      title: '',\n      price: '',\n      description: '',\n      tags: '',\n      image: null,\n      imagePreview: null,\n      loading: false\n    };\n  },\n  methods: {\n    handleImageChange(e) {\n      const file = e.target.files[0];\n      if (file) {\n        this.image = file;\n        // 创建预览\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.imagePreview = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    async handleSubmit() {\n      if (!this.title || !this.price || !this.description) {\n        this.$message.error('请填写必填字段');\n        return;\n      }\n      \n      this.loading = true;\n      try {\n        // 创建FormData对象\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('price', this.price);\n        formData.append('description', this.description);\n        formData.append('tags', this.tags);\n        \n        // 如果有图片，添加到FormData\n        if (this.image) {\n          formData.append('image', this.image);\n        }\n        \n        // 发送请求\n        const res = await axios.post('/items', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        \n        if (res.ok) {\n          this.$message.success('商品发布成功！');\n          // 重置表单\n          this.title = '';\n          this.price = '';\n          this.description = '';\n          this.tags = '';\n          this.image = null;\n          this.imagePreview = null;\n          \n          // 跳转到商品详情页\n          this.$router.push({\n            name: 'ItemDetail',\n            params: { id: res.data.id }\n          });\n        }\n      } catch (error) {\n        console.error('发布商品失败', error);\n        this.$message.error(error.error?.message || '发布商品失败，请稍后重试');\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.card {\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n.card-header {\n  text-align: center;\n}\n</style>\n"],"mappings":"AAuFA,OAAOA,KAAI,MAAO,UAAU;AAE5B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,IAAI;MACXC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,CAAC,EAAE;MACnB,MAAMC,IAAG,GAAID,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC9B,IAAIF,IAAI,EAAE;QACR,IAAI,CAACN,KAAI,GAAIM,IAAI;QACjB;QACA,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAKN,CAAC,IAAK;UACrB,IAAI,CAACJ,YAAW,GAAII,CAAC,CAACE,MAAM,CAACK,MAAM;QACrC,CAAC;QACDH,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;MAC5B;IACF,CAAC;IACD,MAAMQ,YAAYA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAAClB,KAAI,IAAK,CAAC,IAAI,CAACC,KAAI,IAAK,CAAC,IAAI,CAACC,WAAW,EAAE;QACnD,IAAI,CAACiB,QAAQ,CAACC,KAAK,CAAC,SAAS,CAAC;QAC9B;MACF;MAEA,IAAI,CAACd,OAAM,GAAI,IAAI;MACnB,IAAI;QACF;QACA,MAAMe,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACvB,KAAK,CAAC;QACpCqB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACtB,KAAK,CAAC;QACpCoB,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACrB,WAAW,CAAC;QAChDmB,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACpB,IAAI,CAAC;;QAElC;QACA,IAAI,IAAI,CAACC,KAAK,EAAE;UACdiB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACnB,KAAK,CAAC;QACtC;;QAEA;QACA,MAAMoB,GAAE,GAAI,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,QAAQ,EAAEJ,QAAQ,EAAE;UAC/CK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIF,GAAG,CAACG,EAAE,EAAE;UACV,IAAI,CAACR,QAAQ,CAACS,OAAO,CAAC,SAAS,CAAC;UAChC;UACA,IAAI,CAAC5B,KAAI,GAAI,EAAE;UACf,IAAI,CAACC,KAAI,GAAI,EAAE;UACf,IAAI,CAACC,WAAU,GAAI,EAAE;UACrB,IAAI,CAACC,IAAG,GAAI,EAAE;UACd,IAAI,CAACC,KAAI,GAAI,IAAI;UACjB,IAAI,CAACC,YAAW,GAAI,IAAI;;UAExB;UACA,IAAI,CAACwB,OAAO,CAACC,IAAI,CAAC;YAChBC,IAAI,EAAE,YAAY;YAClBC,MAAM,EAAE;cAAEC,EAAE,EAAET,GAAG,CAACzB,IAAI,CAACkC;YAAG;UAC5B,CAAC,CAAC;QACJ;MACF,EAAE,OAAOb,KAAK,EAAE;QACdc,OAAO,CAACd,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B,IAAI,CAACD,QAAQ,CAACC,KAAK,CAACA,KAAK,CAACA,KAAK,EAAEe,OAAM,IAAK,cAAc,CAAC;MAC7D,UAAU;QACR,IAAI,CAAC7B,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}