{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6 col-lg-4\"\n};\nconst _hoisted_4 = {\n  class: \"card mt-5\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = [\"disabled\"];\nconst _hoisted_13 = {\n  key: 0,\n  class: \"spinner-border spinner-border-sm mr-2\"\n};\nconst _hoisted_14 = {\n  class: \"mt-3 text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n    class: \"card-header bg-primary text-white\"\n  }, [_createElementVNode(\"h4\", {\n    class: \"mb-0\"\n  }, \"用户注册\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.handleRegister && $options.handleRegister(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_6, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"用户名\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"密码\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_8, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"确认密码\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmPassword = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), $data.password !== $data.confirmPassword ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \" 两次输入的密码不一致 \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_10, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"邮箱（可选）\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.email = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_11, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"phone\"\n  }, \"手机号（可选）\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"tel\",\n    id: \"phone\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.phone = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.phone]])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary btn-block\",\n    disabled: $data.loading || $data.password !== $data.confirmPassword\n  }, [$data.loading ? (_openBlock(), _createElementBlock(\"span\", _hoisted_13)) : _createCommentVNode(\"v-if\", true), _cache[11] || (_cache[11] = _createTextVNode(\" 注册 \", -1 /* CACHED */))], 8 /* PROPS */, _hoisted_12)], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"p\", null, [_cache[13] || (_cache[13] = _createTextVNode(\"已有账号？\", -1 /* CACHED */)), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [...(_cache[12] || (_cache[12] = [_createTextVNode(\"立即登录\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  })])])])])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","args","$options","handleRegister","_hoisted_6","for","type","id","$data","username","$event","required","_hoisted_7","password","_hoisted_8","confirmPassword","_hoisted_9","_hoisted_10","email","_hoisted_11","phone","disabled","loading","_hoisted_13","_hoisted_14","_createVNode","_component_router_link","to"],"sources":["D:\\21626\\MyFiles\\files\\2025fall\\SE\\Vue_2\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-6 col-lg-4\">\n        <div class=\"card mt-5\">\n          <div class=\"card-header bg-primary text-white\">\n            <h4 class=\"mb-0\">用户注册</h4>\n          </div>\n          <div class=\"card-body\">\n            <form @submit.prevent=\"handleRegister\">\n              <div class=\"form-group\">\n                <label for=\"username\">用户名</label>\n                <input \n                  type=\"text\" \n                  id=\"username\" \n                  v-model=\"username\" \n                  class=\"form-control\" \n                  required\n                >\n              </div>\n              <div class=\"form-group\">\n                <label for=\"password\">密码</label>\n                <input \n                  type=\"password\" \n                  id=\"password\" \n                  v-model=\"password\" \n                  class=\"form-control\" \n                  required\n                >\n              </div>\n              <div class=\"form-group\">\n                <label for=\"confirmPassword\">确认密码</label>\n                <input \n                  type=\"password\" \n                  id=\"confirmPassword\" \n                  v-model=\"confirmPassword\" \n                  class=\"form-control\" \n                  required\n                >\n                <div class=\"text-danger\" v-if=\"password !== confirmPassword\">\n                  两次输入的密码不一致\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"email\">邮箱（可选）</label>\n                <input \n                  type=\"email\" \n                  id=\"email\" \n                  v-model=\"email\" \n                  class=\"form-control\"\n                >\n              </div>\n              <div class=\"form-group\">\n                <label for=\"phone\">手机号（可选）</label>\n                <input \n                  type=\"tel\" \n                  id=\"phone\" \n                  v-model=\"phone\" \n                  class=\"form-control\"\n                >\n              </div>\n              <button \n                type=\"submit\" \n                class=\"btn btn-primary btn-block\" \n                :disabled=\"loading || password !== confirmPassword\"\n              >\n                <span v-if=\"loading\" class=\"spinner-border spinner-border-sm mr-2\"></span>\n                注册\n              </button>\n            </form>\n            \n            <div class=\"mt-3 text-center\">\n              <p>已有账号？<router-link to=\"/login\">立即登录</router-link></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      email: '',\n      phone: '',\n      loading: false\n    };\n  },\n  methods: {\n    async handleRegister() {\n      if (this.password !== this.confirmPassword) {\n        this.$message.error('两次输入的密码不一致');\n        return;\n      }\n      \n      this.loading = true;\n      try {\n        const res = await axios.post('/auth/register', {\n          username: this.username,\n          password: this.password,\n          email: this.email,\n          phone: this.phone\n        });\n        \n        if (res.ok) {\n          // 显示成功消息\n          this.$message.success('注册成功！请登录');\n          \n          // 跳转到登录页面\n          this.$router.push('/login');\n        }\n      } catch (error) {\n        console.error('注册失败', error);\n        // 显示错误消息\n        this.$message.error(error.error?.message || '注册失败，请稍后重试');\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.card {\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n.card-header {\n  text-align: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}