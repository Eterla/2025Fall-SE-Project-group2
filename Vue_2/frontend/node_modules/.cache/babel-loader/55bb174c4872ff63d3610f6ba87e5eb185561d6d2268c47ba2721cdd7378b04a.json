{"ast":null,"code":"import axios from '../axios';\nexport default {\n  data() {\n    return {\n      messages: [],\n      messageContent: '',\n      loadingMessages: true,\n      loadingSend: false,\n      otherUserId: this.$route.params.otherUserId,\n      itemId: this.$route.params.itemId,\n      otherUsername: '',\n      itemTitle: '',\n      currentUserId: null\n    };\n  },\n  mounted() {\n    this.getCurrentUser();\n    this.loadMessages();\n\n    // 监听路由变化，如果参数ID或商品ID变化，重新加载消息\n    this.$watch(() => {\n      this.otherUserId = this.$route.params.otherUserId;\n      this.itemId = this.$route.params.itemId;\n      this.loadMessages();\n    });\n\n    // 自动滚动到底部\n    this.scrollToBottom();\n  },\n  methods: {\n    async getCurrentUser() {\n      try {\n        const res = await axios.get('/auth/me');\n        if (res.ok) {\n          this.currentUserId = res.data.id;\n        }\n      } catch (error) {\n        console.error('获取当前用户信息失败', error);\n      }\n    },\n    async loadMessages() {\n      this.loadingMessages = true;\n      try {\n        const res = await axios.get(`/messages/conversations/${this.otherUserId}/${this.itemId}`);\n        if (res.ok) {\n          this.messages = res.data;\n\n          // 获取对方用户名和商品标题（从第一条消息中）\n          if (this.messages.length > 0) {\n            this.otherUsername = this.messages[0].from_user_id === this.currentUserId ? this.messages[0].to_username : this.messages[0].from_username;\n\n            // 这里假设商品标题可以从路由参数或其他地方获取\n            // 实际应用中可能需要额外请求商品信息\n            this.itemTitle = this.messages[0].item_title || '未知商品';\n          }\n        }\n      } catch (error) {\n        console.error('加载聊天记录失败', error);\n        this.$message.error('加载聊天记录失败');\n      } finally {\n        this.loadingMessages = false;\n        this.scrollToBottom();\n      }\n    },\n    async sendMessage() {\n      if (!this.messageContent.trim()) return;\n      this.loadingSend = true;\n      try {\n        const res = await axios.post('/messages', {\n          to_user_id: this.otherUserId,\n          item_id: this.itemId,\n          content: this.messageContent\n        });\n        if (res.ok) {\n          // 添加新消息到列表\n          const newMessage = res.data;\n          newMessage.from_username = this.currentUser.username;\n          newMessage.to_username = this.otherUsername;\n          this.messages.push(newMessage);\n\n          // 清空输入框\n          this.messageContent = '';\n\n          // 滚动到底部\n          this.scrollToBottom();\n        }\n      } catch (error) {\n        console.error('发送消息失败', error);\n        this.$message.error('发送消息失败');\n      } finally {\n        this.loadingSend = false;\n      }\n    },\n    scrollToBottom() {\n      // 使用$nextTick确保DOM已更新\n      this.$nextTick(() => {\n        const chatContainer = this.$el.querySelector('.card-body');\n        if (chatContainer) {\n          chatContainer.scrollTop = chatContainer.scrollHeight;\n        }\n      });\n    },\n    formatTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleTimeString();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","messages","messageContent","loadingMessages","loadingSend","otherUserId","$route","params","itemId","otherUsername","itemTitle","currentUserId","mounted","getCurrentUser","loadMessages","$watch","scrollToBottom","methods","res","get","ok","id","error","console","length","from_user_id","to_username","from_username","item_title","$message","sendMessage","trim","post","to_user_id","item_id","content","newMessage","currentUser","username","push","$nextTick","chatContainer","$el","querySelector","scrollTop","scrollHeight","formatTime","dateString","date","Date","toLocaleTimeString"],"sources":["D:\\21626\\MyFiles\\files\\2025fall\\SE\\Vue_2\\frontend\\src\\views\\ChatDetail.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8 mx-auto\">\n        <div class=\"card mt-5\">\n          <!-- 聊天头部 -->\n          <div class=\"card-header bg-primary text-white d-flex justify-content-between align-items-center\">\n            <div>\n              <h5 class=\"mb-0\">与 {{ otherUsername }} 聊天</h5>\n              <small>商品：{{ itemTitle }}</small>\n            </div>\n            <router-link to=\"/messages\" class=\"btn btn-light btn-sm\">\n              <i class=\"fas fa-arrow-left\"></i> 返回\n            </router-link>\n          </div>\n          \n          <!-- 聊天区域 -->\n          <div class=\"card-body p-0\" style=\"height: 500px; overflow-y: auto;\">\n            <div class=\"p-3\">\n              <!-- 消息列表 -->\n              <div v-for=\"message in messages\" :key=\"message.id\" class=\"mb-3\">\n                <div class=\"d-flex align-items-start\">\n                  <!-- 对方头像 -->\n                  <div \n                    class=\"flex-shrink-0 mr-3\" \n                    v-if=\"message.from_user_id === currentUserId\"\n                  >\n                    <img \n                      src=\"/static/images/user.png\" \n                      class=\"rounded-circle\" \n                      style=\"width: 40px; height: 40px;\"\n                      alt=\"我\"\n                    >\n                  </div>\n                  \n                  <!-- 消息内容 -->\n                  <div \n                    class=\"bg-primary text-white rounded-lg p-2 max-w-75\"\n                    v-if=\"message.from_user_id === currentUserId\"\n                  >\n                    <p class=\"mb-0\">{{ message.content }}</p>\n                    <small class=\"text-muted\">{{ formatTime(message.created_at) }}</small>\n                  </div>\n                  \n                  <!-- 对方消息 -->\n                  <div \n                    class=\"bg-light rounded-lg p-2 max-w-75\"\n                    v-else\n                  >\n                    <p class=\"mb-0\">{{ message.content }}</p>\n                    <small class=\"text-muted\">{{ formatTime(message.created_at) }}</small>\n                  </div>\n                  \n                  <!-- 对方头像 -->\n                  <div \n                    class=\"flex-shrink-0 ml-3\" \n                    v-if=\"message.from_user_id !== currentUserId\"\n                  >\n                    <img \n                      src=\"/static/images/user.png\" \n                      class=\"rounded-circle\" \n                      style=\"width: 40px; height: 40px;\"\n                      :alt=\"otherUsername\"\n                    >\n                  </div>\n                </div>\n              </div>\n              \n              <!-- 加载中 -->\n              <div class=\"text-center\" v-if=\"loadingMessages\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                  <span class=\"sr-only\">Loading...</span>\n                </div>\n              </div>\n              \n              <!-- 暂无消息 -->\n              <div class=\"text-center text-muted py-5\" v-if=\"messages.length === 0 && !loadingMessages\">\n                <p>开始聊天吧</p>\n              </div>\n            </div>\n          </div>\n          \n          <!-- 发送输入区域 -->\n          <div class=\"card-footer\">\n            <form @submit.prevent=\"sendMessage\">\n              <div class=\"input-group\">\n                <input \n                  type=\"text\" \n                  v-model=\"messageContent\" \n                  class=\"form-control\" \n                  placeholder=\"输入消息...\"\n                  required\n                >\n                <button \n                  type=\"submit\" \n                  class=\"btn btn-primary\"\n                  :disabled=\"loadingSend\"\n                >\n                  <span v-if=\"loadingSend\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                  发送\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios';\n\nexport default {\n  data() {\n    return {\n      messages: [],\n      messageContent: '',\n      loadingMessages: true,\n      loadingSend: false,\n      otherUserId: this.$route.params.otherUserId,\n      itemId: this.$route.params.itemId,\n      otherUsername: '',\n      itemTitle: '',\n      currentUserId: null\n    };\n  },\n  mounted() {\n    this.getCurrentUser();\n    this.loadMessages();\n    \n    // 监听路由变化，如果参数ID或商品ID变化，重新加载消息\n    this.$watch(() => {\n      this.otherUserId = this.$route.params.otherUserId;\n      this.itemId = this.$route.params.itemId;\n      this.loadMessages();\n    });\n    \n    // 自动滚动到底部\n    this.scrollToBottom();\n  },\n  methods: {\n    async getCurrentUser() {\n      try {\n        const res = await axios.get('/auth/me');\n        if (res.ok) {\n          this.currentUserId = res.data.id;\n        }\n      } catch (error) {\n        console.error('获取当前用户信息失败', error);\n      }\n    },\n    async loadMessages() {\n      this.loadingMessages = true;\n      try {\n        const res = await axios.get(`/messages/conversations/${this.otherUserId}/${this.itemId}`);\n        if (res.ok) {\n          this.messages = res.data;\n          \n          // 获取对方用户名和商品标题（从第一条消息中）\n          if (this.messages.length > 0) {\n            this.otherUsername = this.messages[0].from_user_id === this.currentUserId \n              ? this.messages[0].to_username \n              : this.messages[0].from_username;\n            \n            // 这里假设商品标题可以从路由参数或其他地方获取\n            // 实际应用中可能需要额外请求商品信息\n            this.itemTitle = this.messages[0].item_title || '未知商品';\n          }\n        }\n      } catch (error) {\n        console.error('加载聊天记录失败', error);\n        this.$message.error('加载聊天记录失败');\n      } finally {\n        this.loadingMessages = false;\n        this.scrollToBottom();\n      }\n    },\n    async sendMessage() {\n      if (!this.messageContent.trim()) return;\n      \n      this.loadingSend = true;\n      try {\n        const res = await axios.post('/messages', {\n          to_user_id: this.otherUserId,\n          item_id: this.itemId,\n          content: this.messageContent\n        });\n        \n        if (res.ok) {\n          // 添加新消息到列表\n          const newMessage = res.data;\n          newMessage.from_username = this.currentUser.username;\n          newMessage.to_username = this.otherUsername;\n          this.messages.push(newMessage);\n          \n          // 清空输入框\n          this.messageContent = '';\n          \n          // 滚动到底部\n          this.scrollToBottom();\n        }\n      } catch (error) {\n        console.error('发送消息失败', error);\n        this.$message.error('发送消息失败');\n      } finally {\n        this.loadingSend = false;\n      }\n    },\n    scrollToBottom() {\n      // 使用$nextTick确保DOM已更新\n      this.$nextTick(() => {\n        const chatContainer = this.$el.querySelector('.card-body');\n        if (chatContainer) {\n          chatContainer.scrollTop = chatContainer.scrollHeight;\n        }\n      });\n    },\n    formatTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleTimeString();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.card-body {\n  overflow-y: auto;\n}\n.max-w-75 {\n  max-width: 75%;\n}\n.input-group {\n  display: flex;\n}\n.input-group input {\n  flex: 1;\n  margin-right: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}