{"ast":null,"code":"// 导入axios（后面会用于调用后端注册接口）\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      // 用户名\n      password: '',\n      // 密码\n      confirmPassword: '',\n      // 确认密码\n      email: '' // 邮箱\n    };\n  },\n  methods: {\n    async handleRegister() {\n      // 简单验证\n      if (this.password !== this.confirmPassword) {\n        alert('两次密码不一致');\n        return;\n      }\n      try {\n        // 调用后端注册接口（暂时模拟，后续替换为真实请求）\n        const response = await axios.post('/api/auth/register', {\n          username: this.username,\n          password: this.password,\n          email: this.email\n        });\n        if (response.data.ok) {\n          alert('注册成功，请登录');\n          this.$router.push('/login'); // 跳转到登录页\n        } else {\n          alert(response.data.message || '注册失败');\n        }\n      } catch (error) {\n        console.error('注册请求失败:', error);\n        alert('网络错误，请稍后再试');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","confirmPassword","email","methods","handleRegister","alert","response","post","ok","$router","push","message","error","console"],"sources":["D:\\21626\\MyFiles\\files\\2025fall\\SE\\Vue_2\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-header bg-primary text-white\">\n            <h3 class=\"text-center\">用户注册</h3>\n          </div>\n          <div class=\"card-body\">\n            <form @submit.prevent=\"handleRegister\">\n              <!-- 用户名 -->\n              <div class=\"mb-3\">\n                <label for=\"username\" class=\"form-label\">用户名</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"username\" \n                  v-model=\"username\" \n                  required\n                  placeholder=\"请输入用户名\"\n                >\n              </div>\n\n              <!-- 密码 -->\n              <div class=\"mb-3\">\n                <label for=\"password\" class=\"form-label\">密码</label>\n                <input \n                  type=\"password\" \n                  class=\"form-control\" \n                  id=\"password\" \n                  v-model=\"password\" \n                  required\n                  placeholder=\"请输入密码\"\n                >\n              </div>\n\n              <!-- 确认密码 -->\n              <div class=\"mb-3\">\n                <label for=\"confirmPassword\" class=\"form-label\">确认密码</label>\n                <input \n                  type=\"password\" \n                  class=\"form-control\" \n                  id=\"confirmPassword\" \n                  v-model=\"confirmPassword\" \n                  required\n                  placeholder=\"请再次输入密码\"\n                >\n                <!-- 密码不一致提示 -->\n                <p class=\"text-danger mt-1\" v-if=\"password !== confirmPassword && confirmPassword\">\n                  两次密码输入不一致\n                </p>\n              </div>\n\n              <!-- 邮箱（可选，根据旧模板是否有） -->\n              <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">邮箱（选填）</label>\n                <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  id=\"email\" \n                  v-model=\"email\" \n                  placeholder=\"请输入邮箱\"\n                >\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary w-100\" :disabled=\"password !== confirmPassword\">\n                注册\n              </button>\n            </form>\n            <p class=\"text-center mt-3\">\n              已有账号？<router-link to=\"/login\">立即登录</router-link>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// 导入axios（后面会用于调用后端注册接口）\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      username: '',       // 用户名\n      password: '',       // 密码\n      confirmPassword: '',// 确认密码\n      email: ''           // 邮箱\n    }\n  },\n  methods: {\n    async handleRegister() {\n      // 简单验证\n      if (this.password !== this.confirmPassword) {\n        alert('两次密码不一致');\n        return;\n      }\n\n      try {\n        // 调用后端注册接口（暂时模拟，后续替换为真实请求）\n        const response = await axios.post('/api/auth/register', {\n          username: this.username,\n          password: this.password,\n          email: this.email\n        });\n\n        if (response.data.ok) {\n          alert('注册成功，请登录');\n          this.$router.push('/login'); // 跳转到登录页\n        } else {\n          alert(response.data.message || '注册失败');\n        }\n      } catch (error) {\n        console.error('注册请求失败:', error);\n        alert('网络错误，请稍后再试');\n      }\n    }\n  }\n}\n</script>"],"mappings":"AAgFA;AACA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAQ;MACpBC,QAAQ,EAAE,EAAE;MAAQ;MACpBC,eAAe,EAAE,EAAE;MAAC;MACpBC,KAAK,EAAE,EAAC,CAAY;IACtB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB;MACA,IAAI,IAAI,CAACJ,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1CI,KAAK,CAAC,SAAS,CAAC;QAChB;MACF;MAEA,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,oBAAoB,EAAE;UACtDR,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBE,KAAK,EAAE,IAAI,CAACA;QACd,CAAC,CAAC;QAEF,IAAII,QAAQ,CAACR,IAAI,CAACU,EAAE,EAAE;UACpBH,KAAK,CAAC,UAAU,CAAC;UACjB,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;QAC/B,OAAO;UACLL,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACa,OAAM,IAAK,MAAM,CAAC;QACxC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BP,KAAK,CAAC,YAAY,CAAC;MACrB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}