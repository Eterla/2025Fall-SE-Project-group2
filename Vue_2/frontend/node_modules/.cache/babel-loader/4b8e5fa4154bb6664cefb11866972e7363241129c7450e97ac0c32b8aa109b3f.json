{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nconst _hoisted_7 = {\n  class: \"mb-3\"\n};\nconst _hoisted_8 = {\n  class: \"mb-3\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"text-danger mt-1\"\n};\nconst _hoisted_10 = {\n  class: \"mb-3\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = {\n  class: \"text-center mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    class: \"card-header bg-primary text-white\"\n  }, [_createElementVNode(\"h3\", {\n    class: \"text-center\"\n  }, \"用户注册\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.handleRegister && $options.handleRegister(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" 用户名 \"), _createElementVNode(\"div\", _hoisted_6, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"username\",\n    class: \"form-label\"\n  }, \"用户名\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\",\n    placeholder: \"请输入用户名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createCommentVNode(\" 密码 \"), _createElementVNode(\"div\", _hoisted_7, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"password\",\n    class: \"form-label\"\n  }, \"密码\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\",\n    placeholder: \"请输入密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createCommentVNode(\" 确认密码 \"), _createElementVNode(\"div\", _hoisted_8, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\",\n    class: \"form-label\"\n  }, \"确认密码\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmPassword = $event),\n    required: \"\",\n    placeholder: \"请再次输入密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), _createCommentVNode(\" 密码不一致提示 \"), $data.password !== $data.confirmPassword && $data.confirmPassword ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \" 两次密码输入不一致 \")) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 邮箱（可选，根据旧模板是否有） \"), _createElementVNode(\"div\", _hoisted_10, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"email\",\n    class: \"form-label\"\n  }, \"邮箱（选填）\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.email = $event),\n    placeholder: \"请输入邮箱\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary w-100\",\n    disabled: $data.password !== $data.confirmPassword\n  }, \" 注册 \", 8 /* PROPS */, _hoisted_11)], 32 /* NEED_HYDRATION */), _createElementVNode(\"p\", _hoisted_12, [_cache[10] || (_cache[10] = _createTextVNode(\" 已有账号？\", -1 /* CACHED */)), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [...(_cache[9] || (_cache[9] = [_createTextVNode(\"立即登录\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  })])])])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","args","$options","handleRegister","_createCommentVNode","_hoisted_6","for","type","id","$data","username","$event","required","placeholder","_hoisted_7","password","_hoisted_8","confirmPassword","_hoisted_9","_hoisted_10","email","disabled","_hoisted_11","_hoisted_12","_createVNode","_component_router_link","to"],"sources":["D:\\21626\\MyFiles\\files\\2025fall\\SE\\Vue_2\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-header bg-primary text-white\">\n            <h3 class=\"text-center\">用户注册</h3>\n          </div>\n          <div class=\"card-body\">\n            <form @submit.prevent=\"handleRegister\">\n              <!-- 用户名 -->\n              <div class=\"mb-3\">\n                <label for=\"username\" class=\"form-label\">用户名</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"username\" \n                  v-model=\"username\" \n                  required\n                  placeholder=\"请输入用户名\"\n                >\n              </div>\n\n              <!-- 密码 -->\n              <div class=\"mb-3\">\n                <label for=\"password\" class=\"form-label\">密码</label>\n                <input \n                  type=\"password\" \n                  class=\"form-control\" \n                  id=\"password\" \n                  v-model=\"password\" \n                  required\n                  placeholder=\"请输入密码\"\n                >\n              </div>\n\n              <!-- 确认密码 -->\n              <div class=\"mb-3\">\n                <label for=\"confirmPassword\" class=\"form-label\">确认密码</label>\n                <input \n                  type=\"password\" \n                  class=\"form-control\" \n                  id=\"confirmPassword\" \n                  v-model=\"confirmPassword\" \n                  required\n                  placeholder=\"请再次输入密码\"\n                >\n                <!-- 密码不一致提示 -->\n                <p class=\"text-danger mt-1\" v-if=\"password !== confirmPassword && confirmPassword\">\n                  两次密码输入不一致\n                </p>\n              </div>\n\n              <!-- 邮箱（可选，根据旧模板是否有） -->\n              <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">邮箱（选填）</label>\n                <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  id=\"email\" \n                  v-model=\"email\" \n                  placeholder=\"请输入邮箱\"\n                >\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary w-100\" :disabled=\"password !== confirmPassword\">\n                注册\n              </button>\n            </form>\n            <p class=\"text-center mt-3\">\n              已有账号？<router-link to=\"/login\">立即登录</router-link>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// 导入axios（后面会用于调用后端注册接口）\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      username: '',       // 用户名\n      password: '',       // 密码\n      confirmPassword: '',// 确认密码\n      email: ''           // 邮箱\n    }\n  },\n  methods: {\n    async handleRegister() {\n      // 简单验证\n      if (this.password !== this.confirmPassword) {\n        alert('两次密码不一致');\n        return;\n      }\n\n      try {\n        // 调用后端注册接口（暂时模拟，后续替换为真实请求）\n        const response = await axios.post('/api/auth/register', {\n          username: this.username,\n          password: this.password,\n          email: this.email\n        });\n\n        if (response.data.ok) {\n          alert('注册成功，请登录');\n          this.$router.push('/login'); // 跳转到登录页\n        } else {\n          alert(response.data.message || '注册失败');\n        }\n      } catch (error) {\n        console.error('注册请求失败:', error);\n        alert('网络错误，请稍后再试');\n      }\n    }\n  }\n}\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}