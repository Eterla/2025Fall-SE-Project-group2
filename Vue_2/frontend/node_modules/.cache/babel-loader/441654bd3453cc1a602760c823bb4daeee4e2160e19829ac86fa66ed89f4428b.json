{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\n// 导入页面组件\nimport HomeView from '../views/HomeView.vue';\nimport LoginView from '../views/LoginView.vue';\nimport RegisterView from '../views/RegisterView.vue';\nimport PublishView from '../views/PublishView.vue';\nimport UserCenterView from '../views/UserCenterView.vue';\nimport FavoritesView from '../views/FavoritesView.vue';\nimport MessagesView from '../views/MessagesView.vue';\nimport ItemDetailView from '../views/ItemDetailView.vue';\nimport ChatDetailView from '../views/ChatDetailView.vue';\n\n// 路由守卫：检查登录状态（保留你的逻辑）\nconst requireAuth = (to, from, next) => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    next();\n  } else {\n    next('/login');\n  }\n};\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomeView\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginView\n}, {\n  path: '/register',\n  name: 'Register',\n  component: RegisterView\n}, {\n  path: '/item-detail/:id',\n  name: 'ItemDetail',\n  component: ItemDetailView\n},\n// 商品详情路径与原模板保持一致（带id参数）\n{\n  path: '/publish',\n  name: 'Publish',\n  component: PublishView,\n  beforeEnter: requireAuth // 需要登录\n}, {\n  path: '/user-center',\n  name: 'UserCenter',\n  component: UserCenterView,\n  beforeEnter: requireAuth // 需要登录\n}, {\n  path: '/favorites',\n  name: 'Favorites',\n  component: FavoritesView,\n  beforeEnter: requireAuth // 需要登录\n}, {\n  path: '/messages',\n  name: 'Messages',\n  component: MessagesView,\n  beforeEnter: requireAuth // 需要登录\n}, {\n  path: '/chat-detail/:otherUserId/:itemId',\n  name: 'ChatDetail',\n  component: ChatDetailView,\n  beforeEnter: requireAuth // 需要登录\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","LoginView","RegisterView","PublishView","UserCenterView","FavoritesView","MessagesView","ItemDetailView","ChatDetailView","requireAuth","to","from","next","token","localStorage","getItem","routes","path","name","component","beforeEnter","router","history"],"sources":["D:/21626/MyFiles/files/2025fall/SE/Vue_2/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\n// 导入页面组件\nimport HomeView from '../views/HomeView.vue'\nimport LoginView from '../views/LoginView.vue'\nimport RegisterView from '../views/RegisterView.vue'\nimport PublishView from '../views/PublishView.vue'\nimport UserCenterView from '../views/UserCenterView.vue'\nimport FavoritesView from '../views/FavoritesView.vue'\nimport MessagesView from '../views/MessagesView.vue'\nimport ItemDetailView from '../views/ItemDetailView.vue'\nimport ChatDetailView from '../views/ChatDetailView.vue'\n\n// 路由守卫：检查登录状态（保留你的逻辑）\nconst requireAuth = (to, from, next) => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    next();\n  } else {\n    next('/login');\n  }\n};\n\nconst routes = [\n  { path: '/', name: 'Home', component: HomeView },\n  { path: '/login', name: 'Login', component: LoginView },\n  { path: '/register', name: 'Register', component: RegisterView },\n  { path: '/item-detail/:id', name: 'ItemDetail', component: ItemDetailView }, // 商品详情路径与原模板保持一致（带id参数）\n  { \n    path: '/publish', \n    name: 'Publish', \n    component: PublishView, \n    beforeEnter: requireAuth  // 需要登录\n  },\n  { \n    path: '/user-center', \n    name: 'UserCenter', \n    component: UserCenterView, \n    beforeEnter: requireAuth  // 需要登录\n  },\n  { \n    path: '/favorites', \n    name: 'Favorites', \n    component: FavoritesView, \n    beforeEnter: requireAuth  // 需要登录\n  },\n  { \n    path: '/messages', \n    name: 'Messages', \n    component: MessagesView, \n    beforeEnter: requireAuth  // 需要登录\n  },\n  { \n    path: '/chat-detail/:otherUserId/:itemId', \n    name: 'ChatDetail', \n    component: ChatDetailView, \n    beforeEnter: requireAuth  // 需要登录\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n})\n\nexport default router"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D;AACA,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B;;AAExD;AACA,MAAMC,WAAW,GAAGA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACtC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,IAAI,CAAC,CAAC;EACR,CAAC,MAAM;IACLA,IAAI,CAAC,QAAQ,CAAC;EAChB;AACF,CAAC;AAED,MAAMI,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEnB;AAAS,CAAC,EAChD;EAAEiB,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAElB;AAAU,CAAC,EACvD;EAAEgB,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEjB;AAAa,CAAC,EAChE;EAAEe,IAAI,EAAE,kBAAkB;EAAEC,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEZ;AAAe,CAAC;AAAE;AAC7E;EACEU,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEhB,WAAW;EACtBiB,WAAW,EAAEX,WAAW,CAAE;AAC5B,CAAC,EACD;EACEQ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEf,cAAc;EACzBgB,WAAW,EAAEX,WAAW,CAAE;AAC5B,CAAC,EACD;EACEQ,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEd,aAAa;EACxBe,WAAW,EAAEX,WAAW,CAAE;AAC5B,CAAC,EACD;EACEQ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEb,YAAY;EACvBc,WAAW,EAAEX,WAAW,CAAE;AAC5B,CAAC,EACD;EACEQ,IAAI,EAAE,mCAAmC;EACzCC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEX,cAAc;EACzBY,WAAW,EAAEX,WAAW,CAAE;AAC5B,CAAC,CACF;AAED,MAAMY,MAAM,GAAGvB,YAAY,CAAC;EAC1BwB,OAAO,EAAEvB,gBAAgB,CAAC,CAAC;EAC3BiB;AACF,CAAC,CAAC;AAEF,eAAeK,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}