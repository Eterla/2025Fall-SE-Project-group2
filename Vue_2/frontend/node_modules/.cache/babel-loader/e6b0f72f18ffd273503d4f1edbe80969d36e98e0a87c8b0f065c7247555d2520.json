{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-center py-5\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"card mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"row\"\n};\nconst _hoisted_7 = {\n  class: \"col-md-2\"\n};\nconst _hoisted_8 = {\n  class: \"avatar bg-primary text-white rounded-circle d-flex align-items-center justify-content-center fs-3\",\n  style: {\n    \"width\": \"100px\",\n    \"height\": \"100px\"\n  }\n};\nconst _hoisted_9 = {\n  class: \"col-md-10\"\n};\nconst _hoisted_10 = {\n  class: \"text-muted\"\n};\nconst _hoisted_11 = {\n  class: \"card\"\n};\nconst _hoisted_12 = {\n  class: \"card-header bg-primary text-white d-flex justify-content-between align-items-center\"\n};\nconst _hoisted_13 = {\n  class: \"card-body\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"text-center py-5\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"row\"\n};\nconst _hoisted_16 = {\n  class: \"card item-card\"\n};\nconst _hoisted_17 = [\"src\", \"alt\"];\nconst _hoisted_18 = {\n  class: \"card-body\"\n};\nconst _hoisted_19 = {\n  class: \"card-title\"\n};\nconst _hoisted_20 = {\n  class: \"card-text text-danger font-weight-bold\"\n};\nconst _hoisted_21 = {\n  class: \"card-text\"\n};\nconst _hoisted_22 = {\n  class: \"d-flex gap-2\"\n};\nconst _hoisted_23 = [\"onClick\"];\nconst _hoisted_24 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 加载中提示 \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [...(_cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    class: \"visually-hidden\"\n  }, \"Loading...\")], -1 /* CACHED */)]))])) : _createCommentVNode(\"v-if\", true), !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" 用户信息卡片 \"), _createElementVNode(\"div\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"card-header bg-primary text-white\"\n  }, [_createElementVNode(\"h3\", null, \"个人信息\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" 头像（默认用用户名首字母） \"), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($data.userInfo.username.charAt(0).toUpperCase()), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h4\", null, _toDisplayString($data.userInfo.username), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_10, \"注册时间：\" + _toDisplayString($data.userInfo.createdAt), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-primary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.editProfile && $options.editProfile(...args))\n  }, \"编辑资料\"), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-danger ms-2\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.logout && $options.logout(...args))\n  }, \"退出登录\")])])])]), _createCommentVNode(\" 我的商品列表 \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"我的商品\", -1 /* CACHED */)), _createVNode(_component_router_link, {\n    to: \"/publish\",\n    class: \"btn btn-light\"\n  }, {\n    default: _withCtx(() => [...(_cache[4] || (_cache[4] = [_createTextVNode(\"发布新商品\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_13, [_createCommentVNode(\" 没有商品时显示 \"), $data.myItems.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_cache[7] || (_cache[7] = _createElementVNode(\"p\", {\n    class: \"text-muted\"\n  }, \"你还没有发布任何商品\", -1 /* CACHED */)), _createVNode(_component_router_link, {\n    to: \"/publish\",\n    class: \"btn btn-primary\"\n  }, {\n    default: _withCtx(() => [...(_cache[6] || (_cache[6] = [_createTextVNode(\"去发布\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 商品列表 \"), $data.myItems.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.myItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col-md-4 mb-4\",\n      key: item.id\n    }, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"img\", {\n      src: item.imagePath ? `/images/${item.imagePath}` : '/images/default.jpg',\n      class: \"card-img-top item-image\",\n      alt: item.title\n    }, null, 8 /* PROPS */, _hoisted_17), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"h5\", _hoisted_19, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_20, \"¥\" + _toDisplayString(item.price), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_21, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"badge\", item.status === 'available' ? 'bg-success' : 'bg-secondary'])\n    }, _toDisplayString(item.status === 'available' ? '可交易' : '已售出'), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_22, [_createVNode(_component_router_link, {\n      to: `/item/${item.id}`,\n      class: \"btn btn-outline-primary flex-1\"\n    }, {\n      default: _withCtx(() => [...(_cache[8] || (_cache[8] = [_createTextVNode(\"查看\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"to\"]), _createElementVNode(\"button\", {\n      class: \"btn btn-outline-warning flex-1\",\n      onClick: $event => $options.editItem(item.id)\n    }, \"编辑\", 8 /* PROPS */, _hoisted_23), _createElementVNode(\"button\", {\n      class: \"btn btn-outline-danger flex-1\",\n      onClick: $event => $options.changeStatus(item.id, item.status)\n    }, _toDisplayString(item.status === 'available' ? '下架' : '上架'), 9 /* TEXT, PROPS */, _hoisted_24)])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createCommentVNode","$data","loading","_hoisted_2","_cache","_createElementVNode","role","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","userInfo","username","charAt","toUpperCase","_hoisted_9","_hoisted_10","createdAt","onClick","args","$options","editProfile","logout","_hoisted_11","_hoisted_12","_createVNode","_component_router_link","to","_hoisted_13","myItems","length","_hoisted_14","_hoisted_15","_Fragment","_renderList","item","key","id","_hoisted_16","src","imagePath","alt","title","_hoisted_18","_hoisted_19","_hoisted_20","price","_hoisted_21","_normalizeClass","status","_hoisted_22","$event","editItem","_hoisted_23","changeStatus","_hoisted_24"],"sources":["D:\\21626\\MyFiles\\files\\2025fall\\SE\\Vue_2\\frontend\\src\\views\\UserCenter.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- 加载中提示 -->\n    <div v-if=\"loading\" class=\"text-center py-5\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n\n    <div v-if=\"!loading\">\n      <!-- 用户信息卡片 -->\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white\">\n          <h3>个人信息</h3>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-md-2\">\n              <!-- 头像（默认用用户名首字母） -->\n              <div class=\"avatar bg-primary text-white rounded-circle d-flex align-items-center justify-content-center fs-3\" style=\"width: 100px; height: 100px;\">\n                {{ userInfo.username.charAt(0).toUpperCase() }}\n              </div>\n            </div>\n            <div class=\"col-md-10\">\n              <h4>{{ userInfo.username }}</h4>\n              <p class=\"text-muted\">注册时间：{{ userInfo.createdAt }}</p>\n              <button class=\"btn btn-outline-primary\" @click=\"editProfile\">编辑资料</button>\n              <button class=\"btn btn-outline-danger ms-2\" @click=\"logout\">退出登录</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 我的商品列表 -->\n      <div class=\"card\">\n        <div class=\"card-header bg-primary text-white d-flex justify-content-between align-items-center\">\n          <h3>我的商品</h3>\n          <router-link to=\"/publish\" class=\"btn btn-light\">发布新商品</router-link>\n        </div>\n        <div class=\"card-body\">\n          <!-- 没有商品时显示 -->\n          <div v-if=\"myItems.length === 0\" class=\"text-center py-5\">\n            <p class=\"text-muted\">你还没有发布任何商品</p>\n            <router-link to=\"/publish\" class=\"btn btn-primary\">去发布</router-link>\n          </div>\n\n          <!-- 商品列表 -->\n          <div class=\"row\" v-if=\"myItems.length > 0\">\n            <div class=\"col-md-4 mb-4\" v-for=\"item in myItems\" :key=\"item.id\">\n              <div class=\"card item-card\">\n                <img \n                  :src=\"item.imagePath ? `/images/${item.imagePath}` : '/images/default.jpg'\" \n                  class=\"card-img-top item-image\" \n                  :alt=\"item.title\"\n                >\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">{{ item.title }}</h5>\n                  <p class=\"card-text text-danger font-weight-bold\">¥{{ item.price }}</p>\n                  <p class=\"card-text\">\n                    <span class=\"badge\" :class=\"item.status === 'available' ? 'bg-success' : 'bg-secondary'\">\n                      {{ item.status === 'available' ? '可交易' : '已售出' }}\n                    </span>\n                  </p>\n                  <div class=\"d-flex gap-2\">\n                    <router-link :to=\"`/item/${item.id}`\" class=\"btn btn-outline-primary flex-1\">查看</router-link>\n                    <button class=\"btn btn-outline-warning flex-1\" @click=\"editItem(item.id)\">编辑</button>\n                    <button \n                      class=\"btn btn-outline-danger flex-1\" \n                      @click=\"changeStatus(item.id, item.status)\"\n                    >\n                      {{ item.status === 'available' ? '下架' : '上架' }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      loading: true,       // 加载状态\n      userInfo: {},        // 用户信息\n      myItems: []          // 我的商品列表\n    }\n  },\n  created() {\n    // 页面加载时获取用户信息和商品列表\n    this.getUserInfo();\n    this.getMyItems();\n  },\n  methods: {\n    // 获取用户信息\n    async getUserInfo() {\n      try {\n        // 从本地存储获取用户信息（登录时保存的）\n        const userInfoStr = localStorage.getItem('user_info');\n        if (userInfoStr) {\n          this.userInfo = JSON.parse(userInfoStr);\n        } else {\n          // 如果本地没有，调用接口获取（实际项目中需要后端接口支持）\n          const response = await axios.get('/api/auth/me');\n          if (response.data.ok) {\n            this.userInfo = response.data.data;\n            localStorage.setItem('user_info', JSON.stringify(this.userInfo)); // 保存到本地\n          }\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        alert('获取用户信息失败，请刷新页面重试');\n      }\n    },\n\n    // 获取我的商品列表\n    async getMyItems() {\n      try {\n        // 调用后端接口获取当前用户发布的商品\n        const response = await axios.get('/api/items/my');\n        if (response.data.ok) {\n          this.myItems = response.data.data;\n        } else {\n          alert(response.data.message || '获取商品列表失败');\n        }\n      } catch (error) {\n        console.error('获取我的商品失败:', error);\n        // 暂时用模拟数据显示（后端接口未实现时）\n        this.myItems = [\n          {\n            id: 1,\n            title: '我的测试商品1',\n            price: 199,\n            imagePath: 'default.jpg',\n            status: 'available'\n          },\n          {\n            id: 2,\n            title: '我的测试商品2',\n            price: 299,\n            imagePath: '',\n            status: 'sold'\n          }\n        ];\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // 编辑个人资料（预留方法）\n    editProfile() {\n      alert('编辑资料功能待实现');\n      // 实际项目中可跳转到编辑页面，或弹出编辑模态框\n    },\n\n    // 退出登录\n    logout() {\n      if (confirm('确定要退出登录吗？')) {\n        // 清除本地存储的登录信息\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('user_info');\n        // 跳转到登录页\n        this.$router.push('/login');\n        // 刷新页面\n        window.location.reload();\n      }\n    },\n\n    // 编辑商品（跳转到编辑页面，预留）\n    editItem(itemId) {\n      alert(`编辑商品 ${itemId}（功能待实现）`);\n      // 实际项目中可跳转到编辑页面：this.$router.push(`/edit-item/${itemId}`)\n    },\n\n    // 改变商品状态（上架/下架）\n    async changeStatus(itemId, currentStatus) {\n      const newStatus = currentStatus === 'available' ? 'sold' : 'available';\n      const actionText = newStatus === 'available' ? '上架' : '下架';\n\n      if (!confirm(`确定要${actionText}该商品吗？`)) {\n        return;\n      }\n\n      try {\n        // 调用后端接口修改商品状态\n        const response = await axios.patch(`/api/items/${itemId}/status`, {\n          status: newStatus\n        });\n\n        if (response.data.ok) {\n          alert(`商品已${actionText}成功`);\n          // 重新获取商品列表\n          this.getMyItems();\n        } else {\n          alert(response.data.message || '操作失败');\n        }\n      } catch (error) {\n        console.error('修改商品状态失败:', error);\n        alert('网络错误，请稍后再试');\n      }\n    }\n  }\n}\n</script>\n\n<style>\n/* 头像样式 */\n.avatar {\n  font-weight: bold;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}